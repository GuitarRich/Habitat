// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Feature.Metadata.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "UI")]
    public partial class CreateMetakeywordsContentFeature : Xunit.IClassFixture<CreateMetakeywordsContentFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Create metakeywords content.feature"
#line hidden
        
        public CreateMetakeywordsContentFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create metakeywords content", "\tAs an editor \r\n\tI want to easily select meta keywords \r\n\tso that I assure that t" +
                    "he right keywords are used across the site", ProgrammingLanguage.CSharp, new string[] {
                        "UI"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(CreateMetakeywordsContentFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Create metakeywords content")]
        [Xunit.TraitAttribute("Description", "Create metakeywords content_UC1_Create new keyword in the Content Editor")]
        [Xunit.TraitAttribute("Category", "Scenario")]
        [Xunit.TraitAttribute("Category", "below")]
        [Xunit.TraitAttribute("Category", "for")]
        [Xunit.TraitAttribute("Category", "manual")]
        [Xunit.TraitAttribute("Category", "testing")]
        [Xunit.TraitAttribute("Category", "Ready")]
        [Xunit.TraitAttribute("Category", "for")]
        [Xunit.TraitAttribute("Category", "Automating")]
        [Xunit.TraitAttribute("Category", "testing")]
        public virtual void CreateMetakeywordsContent_UC1_CreateNewKeywordInTheContentEditor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create metakeywords content_UC1_Create new keyword in the Content Editor", new string[] {
                        "Scenario",
                        "below",
                        "for",
                        "manual",
                        "testing",
                        "Ready",
                        "for",
                        "Automating",
                        "testing"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path"});
            table1.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Metadata Keywords/habitat"});
            table1.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Metadata Keywords/sitecore"});
#line 23
 testRunner.Given("The following Metadata keywords are defined in Sitecore", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path",
                        "FieldName",
                        "FieldValue"});
            table2.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Metadata Keywords",
                        "NewKeyWord",
                        "/sitecore/templates/Project/Common/Content Types/MetaKeyword"});
#line 28
 testRunner.And("Admin create a new Metakeyword", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path"});
            table3.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Metadata Keywords/habitat"});
            table3.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Metadata Keywords/sitecore"});
            table3.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Metadata Keywords/NewKeyWord"});
#line 31
 testRunner.Then("new item with title NewKeyWord should be added under following item", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Create metakeywords content")]
        [Xunit.TraitAttribute("Description", "Create metakeywords content_UC2_Assign metakeyword to page and check keywords in " +
            "the page HTML")]
        [Xunit.TraitAttribute("Category", "Scenario")]
        [Xunit.TraitAttribute("Category", "below")]
        [Xunit.TraitAttribute("Category", "for")]
        [Xunit.TraitAttribute("Category", "manual")]
        [Xunit.TraitAttribute("Category", "testing")]
        [Xunit.TraitAttribute("Category", "Ready")]
        [Xunit.TraitAttribute("Category", "for")]
        [Xunit.TraitAttribute("Category", "Automating")]
        [Xunit.TraitAttribute("Category", "testing")]
        public virtual void CreateMetakeywordsContent_UC2_AssignMetakeywordToPageAndCheckKeywordsInThePageHTML()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create metakeywords content_UC2_Assign metakeyword to page and check keywords in " +
                    "the page HTML", new string[] {
                        "Scenario",
                        "below",
                        "for",
                        "manual",
                        "testing",
                        "Ready",
                        "for",
                        "Automating",
                        "testing"});
#line 50
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path",
                        "FieldName",
                        "FieldValue"});
            table4.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/About Habitat/Getting Started",
                        "MetaKeywords",
                        "habitat"});
            table4.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/About Habitat/Getting Started",
                        "MetaKeywords",
                        "sitecore"});
#line 51
 testRunner.Given("The following Metadata keywords are defined in Sitecore", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "FieldName",
                        "FieldValue"});
            table5.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/About Habitat/Getting Started",
                        "MetaKeywords",
                        "{153640E2-FD0D-42D3-8480-F9615EE78A9A}"});
#line 55
 testRunner.When("The sitecore keyword has been selected", ((string)(null)), table5, "When ");
#line 58
 testRunner.Then("Habitat website is opened on Getting Started page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item name"});
            table6.AddRow(new string[] {
                        "sitecore"});
#line 59
 testRunner.And("The following tag is present", ((string)(null)), table6, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Create metakeywords content")]
        [Xunit.TraitAttribute("Description", "Create metakeywords content_UC3_Assign metakeyword to page and check keywords in " +
            "the page HTML")]
        [Xunit.TraitAttribute("Category", "Scenario")]
        [Xunit.TraitAttribute("Category", "below")]
        [Xunit.TraitAttribute("Category", "for")]
        [Xunit.TraitAttribute("Category", "manual")]
        [Xunit.TraitAttribute("Category", "testing")]
        [Xunit.TraitAttribute("Category", "Ready")]
        [Xunit.TraitAttribute("Category", "for")]
        [Xunit.TraitAttribute("Category", "Automating")]
        [Xunit.TraitAttribute("Category", "testing")]
        public virtual void CreateMetakeywordsContent_UC3_AssignMetakeywordToPageAndCheckKeywordsInThePageHTML()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create metakeywords content_UC3_Assign metakeyword to page and check keywords in " +
                    "the page HTML", new string[] {
                        "Scenario",
                        "below",
                        "for",
                        "manual",
                        "testing",
                        "Ready",
                        "for",
                        "Automating",
                        "testing"});
#line 77
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path",
                        "FieldName",
                        "FieldValue"});
            table7.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/About Habitat/Getting Started",
                        "MetaKeywords",
                        "habitat"});
            table7.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/About Habitat/Getting Started",
                        "MetaKeywords",
                        "sitecore"});
#line 78
 testRunner.Given("The following Metadata keywords are defined in Sitecore", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path",
                        "FieldName",
                        "FieldValue"});
            table8.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/About Habitat/Getting Started",
                        "MetaKeywords",
                        "{425DF582-C8D5-4EBA-B23E-FA1A069435DD}|{153640E2-FD0D-42D3-8480-F9615EE78A9A}"});
#line 82
 testRunner.When("The sitecore keyword has been selected", ((string)(null)), table8, "When ");
#line 85
 testRunner.Then("Habitat website is opened on Getting Started page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item name"});
            table9.AddRow(new string[] {
                        "habitat"});
            table9.AddRow(new string[] {
                        "sitecore"});
#line 86
 testRunner.And("The following tag is present", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CreateMetakeywordsContentFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CreateMetakeywordsContentFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
